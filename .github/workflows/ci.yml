name: Cross-Modal Head Nod Analysis CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        r-version: ['4.2', '4.3', '4.4']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up R ${{ matrix.r-version }}
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r-version }}
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev
        
    - name: Install R dependencies
      run: |
        R -e "source('install.R')"
        
    - name: Validate repository
      run: |
        R -e "source('test_repository.R')"
        
    - name: Test data loading
      run: |
        R -e "
        source('config.R')
        tryCatch({
          data <- read.csv('data/function_wide_all_languages.csv', nrows = 100)
          cat('✅ Data loading test passed: ', nrow(data), ' rows loaded\n')
        }, error = function(e) {
          cat('❌ Data loading test failed: ', e$message, '\n')
          quit(status = 1)
        })
        "
        
    - name: Test script syntax
      run: |
        R -e "
        scripts <- list.files('scripts', pattern = '*.R$', full.names = TRUE)
        for (script in scripts) {
          tryCatch({
            parse(script)
            cat('✅ Valid syntax: ', basename(script), '\n')
          }, error = function(e) {
            cat('❌ Syntax error in ', basename(script), ': ', e$message, '\n')
            quit(status = 1)
          })
        }
        "
        
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-r${{ matrix.r-version }}
        path: |
          *.log
          figures/
          results/
